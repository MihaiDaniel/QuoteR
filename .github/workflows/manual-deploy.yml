name: Manual Deploy with Tag

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Git tag to deploy (e.g. 0.3.0)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.inputs.tag_name }}

    steps:
    - name: Checkout repository at specified tag
      id: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required to fetch all tags

    - name: Verify tag exists
      id: verify_tag
      run: |
        if ! git rev-parse "refs/tags/${{ env.IMAGE_TAG }}" >/dev/null 2>&1; then
          echo "::error::Tag '${{ env.IMAGE_TAG }}' not found."
          exit 1
        fi
        git checkout tags/${{ env.IMAGE_TAG }}

    - name: Setup .NET 6
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: List all files and folders
      run: ls -lR

    - name: Publish .NET 6 app
      run: dotnet publish QuoteR/Quoter/Quoter.Web/Quoter.Web.csproj -c Release -o publish

    - name: Build Docker image from publish directory
      run: |
        cd publish
        docker build -t registry.minuteverse.eu/minuteverse/webapp:${{ env.IMAGE_TAG }} .

    - name: Docker login
      run: echo "${{ secrets.docker_pass }}" | docker login ${{ secrets.docker_registry }} -u ${{ secrets.docker_user }} --password-stdin

    - name: Push Docker image
      run: docker push registry.minuteverse.eu/minuteverse/webapp:${{ env.IMAGE_TAG }}

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.vps }}
        username: ${{ secrets.vps_user }}
        password: ${{ secrets.vps_pass }}
        port: 22
        script: |
          docker login ${{ secrets.docker_registry }} -u ${{ secrets.docker_user }} -p ${{ secrets.docker_pass }}
          docker pull registry.minuteverse.eu/minuteverse/webapp:${{ env.IMAGE_TAG }}
          docker stop minuteverse || true
          docker rm minuteverse || true
          docker run -d --restart unless-stopped -p 8080:80 \
            -e ASPNETCORE_ENVIRONMENT=Production \
            -e QUOTER_ADMIN_USER="${{ secrets.quoter_admin_username }}" \
            -e QUOTER_ADMIN_PASS="${{ secrets.quoter_admin_pass }}" \
            -v minuteverse:/root/.local/share \
            --name minuteverse \
            registry.minuteverse.eu/minuteverse/webapp:${{ env.IMAGE_TAG }}
