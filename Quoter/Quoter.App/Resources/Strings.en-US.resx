<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="folderNotExists" xml:space="preserve">
    <value>The selected folder does not appear to exist. Please select a valid folder.</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="Collection" xml:space="preserve">
    <value>Collection</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="Chapters" xml:space="preserve">
    <value>Chapters</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CreateEditQuotes" xml:space="preserve">
    <value>Create and edit quotes</value>
  </data>
  <data name="ErrTextTooLong" xml:space="preserve">
    <value>Value is too long</value>
  </data>
  <data name="ErrTextInvalidChars" xml:space="preserve">
    <value>Invalid characters detected</value>
  </data>
  <data name="CollectionCreated" xml:space="preserve">
    <value>Collection {0} created</value>
  </data>
  <data name="ErrPleaseInputValue" xml:space="preserve">
    <value>Please input a value</value>
  </data>
  <data name="NewCollection" xml:space="preserve">
    <value>New collection</value>
  </data>
  <data name="NewCollectionName" xml:space="preserve">
    <value>Set the name of the new collection</value>
  </data>
  <data name="CollectionAlreadyExists" xml:space="preserve">
    <value>A collection with the same name already exists</value>
  </data>
  <data name="Quoter" xml:space="preserve">
    <value>Minute Verse</value>
  </data>
  <data name="WelcomeStartupMessage" xml:space="preserve">
    <value>Application has started. It will notify you regularly with quotes.</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="EditCollection" xml:space="preserve">
    <value>Edit collection name</value>
  </data>
  <data name="EditCollectionMsg" xml:space="preserve">
    <value>Enter the new name of the collection</value>
  </data>
  <data name="DeleteCollection" xml:space="preserve">
    <value>Delete colection</value>
  </data>
  <data name="DeleteCollectionMsg" xml:space="preserve">
    <value>Are you sure you want to delete the collection {0} ? All it's content will be lost.</value>
  </data>
  <data name="QuotesSaved" xml:space="preserve">
    <value>Quotes saved succesfully</value>
  </data>
  <data name="NewBook" xml:space="preserve">
    <value>New book</value>
  </data>
  <data name="NewBookName" xml:space="preserve">
    <value>Set the name of the new book in collection {0}</value>
  </data>
  <data name="BookAlreadyExists" xml:space="preserve">
    <value>A book with the same name already exists</value>
  </data>
  <data name="BookCreated" xml:space="preserve">
    <value>Book {0} created in collection {1}</value>
  </data>
  <data name="EditBook" xml:space="preserve">
    <value>Edit book name</value>
  </data>
  <data name="EditBookMsg" xml:space="preserve">
    <value>Enter the new name of the book</value>
  </data>
  <data name="DeleteBook" xml:space="preserve">
    <value>Delete book</value>
  </data>
  <data name="DeleteBookMsg" xml:space="preserve">
    <value>Are you sure you want to delete the book {0} ? All it's content will be lost.</value>
  </data>
  <data name="NewChapter" xml:space="preserve">
    <value>New chapter</value>
  </data>
  <data name="NewChapterName" xml:space="preserve">
    <value>Set the name of the new chapter of book {0}</value>
  </data>
  <data name="ChapterAlreadyExists" xml:space="preserve">
    <value>A chapter with the same name already exists</value>
  </data>
  <data name="ChapterCreated" xml:space="preserve">
    <value>Chapter {0} created in book {1}</value>
  </data>
  <data name="EditChapter" xml:space="preserve">
    <value>Edit chapter name</value>
  </data>
  <data name="EditChapterMsg" xml:space="preserve">
    <value>Enter the new name of the chapter</value>
  </data>
  <data name="DeleteChapter" xml:space="preserve">
    <value>Delete chapter</value>
  </data>
  <data name="DeleteChapterMsg" xml:space="preserve">
    <value>Are you sure you want to delete the chapter {0} ? All it's content will be lost.</value>
  </data>
  <data name="ModifyQuotes" xml:space="preserve">
    <value>Modify your quotes collection</value>
  </data>
  <data name="ManageQuotes" xml:space="preserve">
    <value>Manage favourite quotes</value>
  </data>
  <data name="Quotes" xml:space="preserve">
    <value>Quotes</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Opacity" xml:space="preserve">
    <value>Opacity</value>
  </data>
  <data name="ShowCollectionsByLanguage" xml:space="preserve">
    <value>Show collections based on language</value>
  </data>
  <data name="QuotesFrequency" xml:space="preserve">
    <value>Show quotes every</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>minutes</value>
  </data>
  <data name="NotificationIntervalMustBeBetweenValues" xml:space="preserve">
    <value>Value must be between {0} and {1}</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ShowAQuote" xml:space="preserve">
    <value>Show a quote</value>
  </data>
  <data name="QuotesAddedToBook" xml:space="preserve">
    <value>Quotes added to new book</value>
  </data>
  <data name="QuotesAddedToBookMsg" xml:space="preserve">
    <value>Your collection contained quotes that were not assigned to any book. So they have been added automatically to {0}</value>
  </data>
  <data name="QuotesAddedToChapter" xml:space="preserve">
    <value>Quotes added to new chapter</value>
  </data>
  <data name="QuotesAddedToChapterMsg" xml:space="preserve">
    <value>Your book {0} contained quotes that were not assigned to any chapter. So they have been added automatically to {1}</value>
  </data>
  <data name="NameAlreadyTaken" xml:space="preserve">
    <value>Name already used</value>
  </data>
  <data name="OtherSettings" xml:space="preserve">
    <value>Other settings</value>
  </data>
  <data name="ShowWelcomeMessage" xml:space="preserve">
    <value>Show welcome message</value>
  </data>
  <data name="NotificationType" xml:space="preserve">
    <value>Choose how quotes are displayed</value>
  </data>
  <data name="PopupNotifications" xml:space="preserve">
    <value>Show as a popup notification</value>
  </data>
  <data name="AlwaysOnNotifications" xml:space="preserve">
    <value>Show in notification that is always on screen</value>
  </data>
  <data name="QuotesAutoclose" xml:space="preserve">
    <value>Auto-close popup notifications after</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Collections" xml:space="preserve">
    <value>Collections</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="FavoritesText" xml:space="preserve">
    <value>Here you can choose your favourites collections from which to display quotes</value>
  </data>
  <data name="OptionTrimRow" xml:space="preserve">
    <value>Trim row untill the first empty space character</value>
  </data>
  <data name="OptionExcludeChars" xml:space="preserve">
    <value>Excluded characters ( input characters with no spaces )</value>
  </data>
  <data name="OptionAppendTextStart" xml:space="preserve">
    <value>Append text to the beginning of each quote</value>
  </data>
  <data name="OptionAppendTextEnd" xml:space="preserve">
    <value>Append text to the end of each quote</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ExportCollections" xml:space="preserve">
    <value>Export collections</value>
  </data>
  <data name="ExportOnlyFavourites" xml:space="preserve">
    <value>Export only favourite collections</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ChooseExportFilename" xml:space="preserve">
    <value>Choose a filename and location for your export</value>
  </data>
  <data name="ErrCantExport" xml:space="preserve">
    <value>Cannot export</value>
  </data>
  <data name="ErrCantExportMsg" xml:space="preserve">
    <value>You have checked to export only favourite collections. But none are marked as favourite</value>
  </data>
  <data name="ErrCantExportMsgBadFileName" xml:space="preserve">
    <value>The chosen directory or filename is not valid. Please choose a valid filename</value>
  </data>
  <data name="Exporting" xml:space="preserve">
    <value>Exporting started</value>
  </data>
  <data name="ExportingInBackground" xml:space="preserve">
    <value>Exporting your collections will be done in background. When it's finished you'll receive a notification</value>
  </data>
  <data name="QuotesCollection" xml:space="preserve">
    <value>QuotesCollection</value>
  </data>
  <data name="ExportSuccessfull" xml:space="preserve">
    <value>Export successful</value>
  </data>
  <data name="ExportSuccesfullMsg" xml:space="preserve">
    <value>Collections exported to: {0}</value>
  </data>
  <data name="ExportFailed" xml:space="preserve">
    <value>Export failed</value>
  </data>
  <data name="ExportFailedMsg" xml:space="preserve">
    <value>Export has failed. Please try again. Reason: {0}</value>
  </data>
  <data name="ImportSuccessfull" xml:space="preserve">
    <value>Import succesful</value>
  </data>
  <data name="ImportSuccessfullMsg" xml:space="preserve">
    <value>Collections imported: {0}</value>
  </data>
  <data name="ImportFailed" xml:space="preserve">
    <value>Import failed</value>
  </data>
  <data name="ImportFailedMsg" xml:space="preserve">
    <value>Import has failed. Please try again. Reason {0}</value>
  </data>
  <data name="ErrCantImport" xml:space="preserve">
    <value>Cannot import</value>
  </data>
  <data name="ErrCantImportMsgBadFileName" xml:space="preserve">
    <value>One of the chosen files appears to be invalid.</value>
  </data>
  <data name="Importing" xml:space="preserve">
    <value>Import started</value>
  </data>
  <data name="ImportingInBackground" xml:space="preserve">
    <value>Importing will be done in background. You will receive a notification when it's finished</value>
  </data>
  <data name="ChooseImportFilename" xml:space="preserve">
    <value>Choose files to import</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="MergeCollections" xml:space="preserve">
    <value>Merge collections with the same name into existing ones</value>
  </data>
  <data name="IgnoreLanguage" xml:space="preserve">
    <value>Import in the current language regardless of collection language</value>
  </data>
  <data name="NotificationLocation" xml:space="preserve">
    <value>Notification location</value>
  </data>
  <data name="NotificationFont" xml:space="preserve">
    <value>Notification font</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="NoQuotes" xml:space="preserve">
    <value>There are no quotes to display. Add some quotes or mark any existing collection as favourite.</value>
  </data>
  <data name="EditCollections" xml:space="preserve">
    <value>Edit collections</value>
  </data>
  <data name="Favourites" xml:space="preserve">
    <value>Favourite collections</value>
  </data>
  <data name="ImportingInProgress" xml:space="preserve">
    <value>Importing in progress</value>
  </data>
  <data name="ExportingInProgress" xml:space="preserve">
    <value>Export in progress</value>
  </data>
  <data name="WorkInBackground" xml:space="preserve">
    <value>Background work...</value>
  </data>
  <data name="StartWithWindows" xml:space="preserve">
    <value>Start with Windows</value>
  </data>
  <data name="NotificationSound" xml:space="preserve">
    <value>Notification sound</value>
  </data>
  <data name="QuoterIntroduction" xml:space="preserve">
    <value>Minute Verse allows you to receive regular notifications on your desktop of your favourite quotes or verses. Select a language and press next to continue.</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ChooseCollectionToStart" xml:space="preserve">
    <value>Choose one of the collections</value>
  </data>
  <data name="ChooseCollectionToStartMsg" xml:space="preserve">
    <value>To continue, choose one of the available collections. You can later edit or even add your own collections.</value>
  </data>
  <data name="AlmostDone" xml:space="preserve">
    <value>Almost done</value>
  </data>
  <data name="Rare60" xml:space="preserve">
    <value>Rare (every 1 hour)</value>
  </data>
  <data name="Normal30" xml:space="preserve">
    <value>Normal (every 30 min)</value>
  </data>
  <data name="Often15" xml:space="preserve">
    <value>Often (every 15 min)</value>
  </data>
  <data name="YouCanModifyLater" xml:space="preserve">
    <value>You can modify this settings and much more, from the application settings, after completing the setup.</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>All done</value>
  </data>
  <data name="DoneMsg" xml:space="preserve">
    <value>You will now receive regular notifications with your favourite quotes. If you want to add, edit or delete collections, or modify settings you can use the context menu by right-clicking the tray icon of the application.</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="HowOften" xml:space="preserve">
    <value>How often do you want to receive notifications?</value>
  </data>
  <data name="ConfirmExit" xml:space="preserve">
    <value>Are you sure you want to exit?</value>
  </data>
  <data name="OptionTrimCharsUntil" xml:space="preserve">
    <value>Trim until first</value>
  </data>
  <data name="OptionReplaceChars" xml:space="preserve">
    <value>Replace with:</value>
  </data>
  <data name="WarnReaderNoCollection" xml:space="preserve">
    <value>Collection does not exist</value>
  </data>
  <data name="WarnReaderNoCollectionMsg" xml:space="preserve">
    <value>The collection you selected to read does not exist.</value>
  </data>
  <data name="NoCollection" xml:space="preserve">
    <value>No collection chosen</value>
  </data>
  <data name="PleaseSelectACollection" xml:space="preserve">
    <value>Please select a collection first</value>
  </data>
  <data name="Later" xml:space="preserve">
    <value>Later</value>
  </data>
  <data name="NewUpdateAvailableMsg" xml:space="preserve">
    <value>A new update is available. Do you want to download and install it now?</value>
  </data>
  <data name="UpdateAuto" xml:space="preserve">
    <value>Update automatically</value>
  </data>
  <data name="UpdateAsk" xml:space="preserve">
    <value>Ask to update</value>
  </data>
  <data name="UpdateNever" xml:space="preserve">
    <value>Never update</value>
  </data>
  <data name="UpdateMode" xml:space="preserve">
    <value>Update mode</value>
  </data>
  <data name="ErrSelectOneCollection" xml:space="preserve">
    <value>Please choose at least one collection to continue.</value>
  </data>
  <data name="UpdateApplied" xml:space="preserve">
    <value>Application updated</value>
  </data>
  <data name="UpdateAppliedMessage" xml:space="preserve">
    <value>Application was updated successfully to version {0}</value>
  </data>
  <data name="ErrCantImportAlreadyInProgress" xml:space="preserve">
    <value>Cannot import as an import is already in progress.</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>Open folder</value>
  </data>
</root>