@page
@using Quoter.Web.Data.Entities;
@using Quoter.Web.ViewModels.Shared;
@model Quoter.Web.Pages.AppVersions.IndexModel

@{
	ViewData["Title"] = Localizer["Application versions"];

	BreadCrumbsViewModel breadCrumbs = new(
		Localizer["Application versions"],
		new RouteViewModel(Localizer["Dashboard"], "/AdminDashboard/Index"));
}
<div class="container">

	@await Html.PartialAsync("_BreadCrumbsPartial", breadCrumbs)

	<div class="container m-1">
		<h1>@Localizer["Application versions"]</h1>
	</div>
	<div class="container mt-3">
		<a asp-page="Create" class="btn btn-primary mb-2"><i class="bi bi-file-earmark-plus p-1"></i>@Localizer["Create"]</a>
		<div class="table-responsive">
			<table class="table table-sm table-striped table-hover">
				<thead>
					<tr>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].IsReleased)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].Name)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].Version)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].Type)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].Description)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].Os)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.AppVersions[0].CreationDate)
						</th>
						<th>
							@Localizer["Downloads"]
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (AppVersion item in Model.AppVersions)
					{
						<tr>
							<td>
								@if (item.IsReleased)
								{
									<span class="badge rounded-pill text-bg-success">Yes</span>
								}
								else
								{
									<span class="badge rounded-pill text-bg-danger">No</span>
								}
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Name)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Version)
							</td>
							<td>
								@if (item.Type == Quoter.Shared.Enums.EnumVersionType.UpdateZip)
								{
									<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="right" data-bs-trigger="hover focus" data-bs-content="Zip update">
										<div class="btn btn-sm"><i class="bi bi-file-earmark-zip"></i></div>
									</span>
								}
								else if (item.Type == Quoter.Shared.Enums.EnumVersionType.Installer)
								{
									<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="right" data-bs-trigger="hover focus" data-bs-content="Setup installer">
										<div class="btn btn-sm"><i class="bi bi-file-earmark-play"></i></div>
									</span>
								}
								else
								{
									<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="right" data-bs-trigger="hover focus" data-bs-content="None">
										<div class="btn btn-sm"><i class="bi bi-file-earmark"></i></div>
									</span>
								}
							</td>
							<td>
								@if (item.Description?.Length > 30)
								{
									item.Description = item.Description.Substring(0, 30) + "...";
								}
								@Html.DisplayFor(modelItem => item.Description)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Os)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.CreationDate)
							</td>
							<td>
								@item.LstAppVersionDownloads.Count()
							</td>
							<td>
								<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="top" data-bs-trigger="hover focus" data-bs-content="Edit">
									<a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i class="bi bi-pencil-square"></i></a>
								</span>
								<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="top" data-bs-trigger="hover focus" data-bs-content="Details">
									<a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"><i class="bi bi-info-square"></i></a>
								</span>
								@*<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="top" data-bs-trigger="hover focus" data-bs-content="Delete">
									<a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"><i class="bi bi-trash"></i></a>
								</span>*@

								<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="top" data-bs-trigger="hover focus" data-bs-content="Delete">
									<button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#modalDelete" data-bs-name="@item.Name" data-bs-action="/AppVersions/Index?handler=Delete&id=@item.Id.ToString()">
										<i class="bi bi-trash"></i>
									</button>
								</span>
							</td>
						</tr>
					}
				</tbody>
			</table>
			<paging page-no="Model.PageNo"
					page-size="Model.PageSize"
					total-records="Model.TotalRecords"
					url-template="./AppVersions?PageNo={0}&PageSize={1}"
					render-mode="Bootstrap5">
			</paging>
		</div>
	</div>
</div>

<!-- Modal -->
@await Html.PartialAsync(
		"_ModalDeletePartial",
		new ModalDeleteViewModel(Localizer["ConfirmDelete"], Localizer["ConfirmDeleteVersion"]))

@section Scripts {
	<script src="~/js/modal-delete.js"></script>
}
